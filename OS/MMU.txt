<MMU Oriental>
  Different process could not access memory used by other process.
  ==> Process only use virtual memory instead of physical memory.
  ==> MMU is a hardware to confirm the translation between virtual memory and physical memory is correct.

<Paging>
  Each process has its own page table.

<Swap>
  When RAM run-out but a process should be run, move a process from RAM to swap partition/file and free the RAM for use.
  If a process move back to RAM but its physical memory address change, re-mapping its virtual memory to physical memory to confirm that the process could access the same virtual memory address as before.

<Fork>
  Fork is for process multiplex
  A process have 4 part in memory:
    .Program  (read only)
    .Data     (read/write)
    .Stack    (read/write)
    .Constant (read only)
  Fork create A child process use same program memory with parent process
    .Child process will have its own stack memory when fork.
    .Child process will have its own page mapping to a new physical memory when it first time want to write some data. (copy-on-write)
      -NOT all data memory be copy to a new page/memory for minimizing the physical memory usage.
      -Need MMU support
  Child process could run simualtaneously with parent process.
  Child process end its lifetime when call exec/exit.

<vFork>
  Since copy whole data memory is NOT good idea, child process could NOT run simualtaneously with parent process.
